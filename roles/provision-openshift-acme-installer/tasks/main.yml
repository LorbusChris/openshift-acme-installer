- name: create acme namespace
  openshift_v1_project:
    name: '{{ namespace }}'

- name: switch to acme namespace
  shell: "oc project {{ namespace }}"

- name: create deployment config
  openshift_v1_deployment_config:
    name: acme-controller
    namespace: '{{ namespace }}'
    labels:
      app: acme-controller
      service: acme-controller
    replicas: 1
    spec_strategy_type: Recreate
    spec_template_metadata_labels:
      app: acme-controller
      service: acme-controller
    containers:
    - env:
      - name: OPENSHIFT_ACME_ACMEURL
        value: '{{ acme_url }}'
      - name: OPENSHIFT_ACME_LOGLEVEL
        value: '{{ acme_loglevel }}'
      - name: OPENSHIFT_ACME_SELFSERVICENAME
        value: '{{ acme_selfservicename }}'
      image: "docker.io/tnozicka/openshift-acme"
      image_pull_policy: IfNotPresent
      name: acme-controller
      ports:
      - container_port: 80

- name: create service account
  k8s_v1_service_account:
    name: acme-controller
    namespace: '{{ namespace }}'

- name: create cluster role
  openshift_v1_cluster_role:
    name: acme-controller
  rules:
  - api_groups:
    - ""
    - "route.openshift.io"
    resources:
    - endpoints
    - endpoints/restricted
    - events
    - routes
    - routes/custom-host
    - routes/status
    - secrets
    - services
    verbs:
    - '*'
  - api_groups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch

- name: create cluster role binding
  openshift_v1_cluster_role_binding:
    name: acme-controller
    role_ref_name: acme-controller
    subjects:
    - kind: ServiceAccount
      name: acme-controller
      namespace: '{{ namespace }}'

- name: create acme-controller service
  k8s_v1_service:
    name: acme-controller
    namespace: '{{ namespace }}'
    labels:
      app: acme-controller
      service: acme-controller
    selector:
      app: acme-controller
      service: acme-controller
    ports:
    - name: http
      port: 80
      protocol: TCP
      target_port: 5000
